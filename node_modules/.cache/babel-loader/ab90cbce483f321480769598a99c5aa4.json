{"ast":null,"code":"import _slicedToArray from \"/Users/ashleighparsons/Desktop/wtfork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/ashleighparsons/Desktop/wtfork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ashleighparsons/Desktop/wtfork/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color: #f9dfe0;\\n  background-image: url(\", \");\\n  background-repeat: repeat;\\n  color: #3d8b7d;\\n  min-height: 100vh;\\n  padding: 1.5em;\\n  text-align: center;\\n  h1 {\\n    font-family: 'Ubuntu Condensed', sans-serif;\\n    font-size: 2.2em;\\n    padding: 0.4em 0;\\n  }\\n  h3 {\\n    font-size: 1.7em;\\n    text-transform: capitalize;\\n    font-family: 'Ubuntu Condensed', sans-serif;\\n  }\\n  img {\\n    height: 14em;\\n  }\\n  .loading {\\n    height: 10em;\\n  }\\n  form {\\n    padding: 1.5em 0;\\n    width: 8em;\\n    display: inline-table;\\n  }\\n  #foodPic {\\n    height: 14em;\\n    background-image: url(\", \");\\n    background-repeat: no-repeat;\\n    background-size: contain;\\n    background-position: center;\\n  }\\n  button {\\n    padding: 1.2em 1em;\\n    margin-top: 1em;\\n    background-color: #8fbc91;\\n    border: #8fbc91;\\n    width: 18em;\\n    border-radius: 3px;\\n  }\\n  input {\\n    width: 12.9em;\\n  }\\n  .btn {\\n    background-color: #8fbc91;\\n    border: #8fbc91;\\n    color: #3d8b7d; \\n    padding: 0.7em 1em;\\n    border-radius: 3px;\\n  }\\n  #foodInfo {\\n    .loader {\\n      height: 8em;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport styled from \"styled-components\";\nimport Clarifai from \"clarifai\"; // import axios from \"axios\"\n\nimport Background from \"./background.png\";\nimport Placeholder from \"./placeholder.jpg\";\nconst WtfWrapper = styled.div(_templateObject(), Background, Placeholder);\n\nfunction App() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedFile = _useState2[0],\n        setSelectedFile = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        nutriImage = _useState4[0],\n        setNutriImage = _useState4[1];\n\n  var myClarifaiApiKey = '62569dcb57b347df8031ed6a0a50bdee';\n  var myWolframAppId = 'RWU4HE-Q9UPPVXHQU';\n  var app = new Clarifai.App({\n    apiKey: myClarifaiApiKey\n  });\n\n  const fileSelected = e => {\n    setSelectedFile(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const loadFood = (value, source) => {\n    var preview = document.getElementById('foodPic');\n    var file = document.querySelector(\"input[type=file]\").files[0];\n    var loader = \"https://media.giphy.com/media/5UG0A0ZV8APqnWYU0t/giphy.gif\";\n    var reader = new FileReader(); // load image\n\n    reader.addEventListener(\"load\", e => {\n      preview.style.backgroundImage = \"url(\" + selectedFile + \")\";\n      analyseFood({\n        base64: reader.result.split(\"base64,\")[1]\n      });\n    }, false);\n\n    if (file) {\n      reader.readAsDataURL(file);\n      document.getElementById('foodInfo').innerHTML = '<img src=\"' + loader + '\" className=\"loading\" />';\n    } else {\n      alert(\"No file selcted!\");\n    }\n  }; // get food name from Clarifai\n\n\n  const analyseFood = (value, result) => {\n    app.models.predict(Clarifai.FOOD_MODEL, value).then(function (response) {\n      if (response.rawData.outputs[0].data.hasOwnProperty(\"concepts\")) {\n        var tag = response.rawData.outputs[0].data.concepts[0].name; // link to Wolfram\n\n        var url = 'http://api.wolframalpha.com/v2/query?input=' + tag + '%20nutrition%20facts&appid=' + myWolframAppId; // document.getElementById('foodInfo').innerHTML = '<h3>'+ tag + '</h3>';\n        // post nutritional info\n\n        const getNutritionalInfo = (url, result => {\n          document.getElementById('foodInfo').innerHTML = '<h3>' + tag + '</h3> <img src=' + result + '>';\n          console.log(\"heLLLOOOO \" + result);\n        });\n        getNutritionalInfo();\n        setNutriImage(URL.createObjectURL(result));\n      }\n    }, function (err) {\n      console.log(err);\n    });\n  };\n\n  return React.createElement(WtfWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"What The Fork?\"), React.createElement(\"div\", {\n    id: \"foodPic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    action: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn btn-mdb-color btn-rounded float-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    id: \"filename\",\n    placeholder: \"Filename\",\n    size: \"100\",\n    onChange: fileSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: () => loadFood(document.getElementById('filename').value, 'file'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"What's on my Fork?\")), React.createElement(\"div\", {\n    id: \"foodInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Your Food :\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ashleighparsons/Desktop/wtfork/src/App.js"],"names":["React","useState","styled","Clarifai","Background","Placeholder","WtfWrapper","div","App","selectedFile","setSelectedFile","nutriImage","setNutriImage","myClarifaiApiKey","myWolframAppId","app","apiKey","fileSelected","e","URL","createObjectURL","target","files","loadFood","value","source","preview","document","getElementById","file","querySelector","loader","reader","FileReader","addEventListener","style","backgroundImage","analyseFood","base64","result","split","readAsDataURL","innerHTML","alert","models","predict","FOOD_MODEL","then","response","rawData","outputs","data","hasOwnProperty","tag","concepts","name","url","getNutritionalInfo","console","log","err"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\n\nimport styled from \"styled-components\"\nimport Clarifai from \"clarifai\"\n// import axios from \"axios\"\n\nimport Background from \"./background.png\"\nimport Placeholder from \"./placeholder.jpg\"\n\nconst WtfWrapper = styled.div`\n  background-color: #f9dfe0;\n  background-image: url(${Background});\n  background-repeat: repeat;\n  color: #3d8b7d;\n  min-height: 100vh;\n  padding: 1.5em;\n  text-align: center;\n  h1 {\n    font-family: 'Ubuntu Condensed', sans-serif;\n    font-size: 2.2em;\n    padding: 0.4em 0;\n  }\n  h3 {\n    font-size: 1.7em;\n    text-transform: capitalize;\n    font-family: 'Ubuntu Condensed', sans-serif;\n  }\n  img {\n    height: 14em;\n  }\n  .loading {\n    height: 10em;\n  }\n  form {\n    padding: 1.5em 0;\n    width: 8em;\n    display: inline-table;\n  }\n  #foodPic {\n    height: 14em;\n    background-image: url(${Placeholder});\n    background-repeat: no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  button {\n    padding: 1.2em 1em;\n    margin-top: 1em;\n    background-color: #8fbc91;\n    border: #8fbc91;\n    width: 18em;\n    border-radius: 3px;\n  }\n  input {\n    width: 12.9em;\n  }\n  .btn {\n    background-color: #8fbc91;\n    border: #8fbc91;\n    color: #3d8b7d; \n    padding: 0.7em 1em;\n    border-radius: 3px;\n  }\n  #foodInfo {\n    .loader {\n      height: 8em;\n    }\n  }\n`\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [nutriImage, setNutriImage] = useState(null)\n\n  var myClarifaiApiKey = '62569dcb57b347df8031ed6a0a50bdee';\n  var myWolframAppId = 'RWU4HE-Q9UPPVXHQU';\n\n  var app = new Clarifai.App({apiKey: myClarifaiApiKey});\n\n  const fileSelected = e => {\n    setSelectedFile(URL.createObjectURL(e.target.files[0]))\n  }\n\n  const loadFood = (value, source) => {\n    var preview = document.getElementById('foodPic');\n    var file    = document.querySelector(\"input[type=file]\").files[0];\n    var loader  = \"https://media.giphy.com/media/5UG0A0ZV8APqnWYU0t/giphy.gif\";\n    var reader  = new FileReader();\n\n    // load image\n    reader.addEventListener(\"load\", (e) => { \n      preview.style.backgroundImage = \"url(\" + selectedFile + \")\"\n      analyseFood({ \n        base64: reader.result.split(\"base64,\")[1] \n      });\n    }, false);\n\n    if (file) {\n      reader.readAsDataURL(file);\n      document.getElementById('foodInfo').innerHTML = '<img src=\"' + loader + '\" className=\"loading\" />';\n    } else { \n      alert(\"No file selcted!\"); \n    }\n  }\n\n  // get food name from Clarifai\n  const analyseFood = (value, result) => {\n    app.models.predict(Clarifai.FOOD_MODEL, value).then(function(response) {\n        if(response.rawData.outputs[0].data.hasOwnProperty(\"concepts\")) {\n          var tag = response.rawData.outputs[0].data.concepts[0].name;\n          // link to Wolfram\n          var url = 'http://api.wolframalpha.com/v2/query?input='+tag+'%20nutrition%20facts&appid='+myWolframAppId;\n\n          // document.getElementById('foodInfo').innerHTML = '<h3>'+ tag + '</h3>';\n\n          // post nutritional info\n          const getNutritionalInfo = (url, result => {\n            document.getElementById('foodInfo').innerHTML = '<h3>'+ tag + '</h3> <img src=' + result + '>';\n            console.log(\"heLLLOOOO \" + result)\n          });\n          getNutritionalInfo()\n          setNutriImage(URL.createObjectURL(result))\n        }\n      }, function(err) { console.log(err); }\n    );\n  }\n\n  return (\n    <WtfWrapper>\n      <h1>What The Fork?</h1>\n\n      <div id=\"foodPic\">\n      </div>\n\n      <form action=\"#\">\n          <div className=\"btn btn-mdb-color btn-rounded float-left\">\n            <input type=\"file\" id=\"filename\" placeholder=\"Filename\" size=\"100\" onChange={fileSelected}/>\n          </div>\n        <button onClick={() => loadFood(document.getElementById('filename').value, 'file')}>What's on my Fork?</button>\n      </form>\n\n      <div id=\"foodInfo\">\n        <h3>Your Food :</h3>\n      </div>\n    </WtfWrapper>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}